let board = [];// boÅŸ bir dizi olan board deÄŸiÅŸkeni tanÄ±mlar 
let rows = 8;//satÄ±r sayÄ±sÄ±
let columns = 8;//sÃ¼tun sayÄ±sÄ±

let minesCount = 11; //mayÄ±n sayÄ±sÄ±
let minesLocation = []; // mayÄ±nÄ±n konumunu belirlemek iÃ§in kullanÄ±lacak

let tilesClicked = 0;//oyun sÄ±rasÄ±nda kaÃ§ tuÄŸlaya tÄ±klandÄ±ÄŸÄ±nÄ± takip eder. her tÄ±klamdÄ±ÄŸÄ±nda deÄŸer artar
let flagEnabled = false;// bayrak modunun aÃ§Ä±k veya kapalÄ± olduÄŸunu belirtmek iÃ§in kullanÄ±lÄ±r. BaÅŸlangÄ±Ã§ta false olarak tanÄ±mlanÄ±r, yani bayrak modu kapalÄ±dÄ±r. 

let gameOver = false;//oyunun devam edip etmediÄŸini kontrol eder

window.onload = function() // sayfa yÃ¼klendiÄŸinde startGame fonksiyonu Ã§alÄ±ÅŸacak 
{
    startGame();
}

function setMines() // oyun alanÄ±na mayÄ±n yerleÅŸtrimek iÃ§in kullanÄ±lan fonksiyon
{
    let minesLeft = minesCount;//minesCount deÄŸiÅŸkenin deÄŸerini, minesLeft deÄŸiÅŸkenine atar. Bu deÄŸiÅŸken, kaÃ§ tane mayÄ±n kaldÄ±ÄŸÄ±nÄ± takip eder.
    while (minesLeft > 0) //mayÄ±n sayÄ±sÄ± sÄ±fÄ±ra ulaÅŸana kadar devam eden bir dÃ¶ngÃ¼
    { 
        let r = Math.floor(Math.random() * rows);let c = Math.floor(Math.random() * columns);//Rastgele bir satÄ±r ve sÃ¼tun seÃ§er. bu mayÄ±nÄ±n konumunu belirler
        let id = r.toString() + "-" + c.toString();//Rastgele seÃ§ilen satÄ±r ve sÃ¼tun deÄŸerlerini birleÅŸtirerek bir konum ID'si oluÅŸturur.

        if (!minesLocation.includes(id)) //eÄŸer oluÅŸturulan konum ID'si, "minesLocation" dizisinde bulunmuyorsa:
        {
            minesLocation.push(id);//Konum ID'sini "minesLocation" dizisine ekler.
            minesLeft -= 1;// Bir mayÄ±n eklediÄŸi iÃ§in "minesLeft" deÄŸiÅŸkenini 1 azaltÄ±r.
        }
    }
}


function startGame() //oyunun baÅŸlatÄ±lmasÄ± ve oyun alanÄ±nÄ±n oluÅŸturulmasÄ± iÃ§in kullanÄ±lan fonksiyon 
{ 
    document.getElementById("mines-count").innerText = minesCount;//"mines-count" id'sine sahip bir elementin iÃ§eriÄŸini, "minesCount" deÄŸiÅŸkeninin deÄŸeriyle gÃ¼nceller. mayÄ±n sayÄ±sÄ±nÄ± kullanÄ±cÄ±ya gÃ¶stermek iÃ§in kullanÄ±lÄ±r.
    document.getElementById("flag-button").addEventListener("click", setFlag);//flag-button" id'sine sahip bir butona tÄ±klanÄ±nca "setFlag" fonksiyonunu Ã§alÄ±ÅŸtÄ±rÄ±r. Bu, kullanÄ±cÄ±nÄ±n bayrak modunu aÃ§Ä±p kapatmasÄ±nÄ± saÄŸlar.
    setMines();//fonksiyonu Ã§aÄŸÄ±rarak oyun tahtasÄ±na mayÄ±nlarÄ± yerleÅŸtirir.

    //populate our board
    for (let r = 0; r < rows; r++) //SatÄ±rlarÄ± temsil eden bir dÃ¶ngÃ¼ oluÅŸturur
    {
        let row = [];//Her bir satÄ±rÄ±n hÃ¼crelerini tutmak iÃ§in bir boÅŸ dizi oluÅŸturur
        for (let c = 0; c < columns; c++) // SÃ¼tunlarÄ± temsil eden bir iÃ§ iÃ§e dÃ¶ngÃ¼ oluÅŸturur
        {
            let tile = document.createElement("div");//Her iÃ§ dÃ¶ngÃ¼ adÄ±mÄ±nda bir <div> elementi olan tile oluÅŸturulur. Bu, oyun tahtasÄ±ndaki bir hÃ¼creyi temsil eder.
            tile.id = r.toString() + "-" + c.toString();//Her hÃ¼creye bir id atanÄ±r. r ve c deÄŸiÅŸkenleri, dÃ¶ngÃ¼lerin ÅŸu anki deÄŸerlerini temsil eder ve bÃ¶ylece her hÃ¼creye benzersiz bir id atanÄ±r.
            tile.addEventListener("click", clickTile);//OluÅŸturulan her hÃ¼creye bir tÄ±klama olayÄ± ekler. KullanÄ±cÄ± oyun tahtasÄ±ndaki bir hÃ¼creye tÄ±kladÄ±ÄŸÄ±nda clickTile fonksiyonu Ã§aÄŸrÄ±lÄ±r.
            document.getElementById("board").append(tile);//OluÅŸturulan hÃ¼cre, HTML iÃ§inde "board" adlÄ± bir elemente eklenir. Bu, oyun tahtasÄ±nÄ±n gÃ¶rÃ¼ntÃ¼lenmesini saÄŸlar.
            row.push(tile);// OluÅŸturulan hÃ¼cre, row adlÄ± bir diziye eklenir. Bu dizi, oyun tahtasÄ±ndaki bir satÄ±rdaki tÃ¼m hÃ¼creleri temsil eder.
        }
        board.push(row);//: OluÅŸturulan satÄ±rdaki tÃ¼m hÃ¼creler (row), board adlÄ± bir diziye eklenir
    }

    console.log(board);//OluÅŸturulan oyun tahtasÄ±nÄ±n iÃ§eriÄŸini tarayÄ±cÄ±nÄ±n konsoluna yazdÄ±rÄ±r. Bu, oyun tahtasÄ±nÄ±n oluÅŸturulduÄŸunu ve dÃ¼zgÃ¼n bir ÅŸekilde hazÄ±rlandÄ±ÄŸÄ±nÄ± doÄŸrulamak iÃ§in kullanÄ±lÄ±r.
}

function setFlag() //bayrak modunu kontrol eden fonksiyon
{
    if (flagEnabled) //EÄŸer bayrak modu aÃ§Ä±ksa
    {
        flagEnabled = false;//bayrak modunu kapatÄ±r 
        document.getElementById("flag-button").style.backgroundColor = "lightgray"; //bayrak butonunun arka plan rengini "lightgray" olarak deÄŸiÅŸtirir.
    }
    else //bayrak modu kapalÄ±ysa
    {
        flagEnabled = true;//bayrak modunu kapatÄ±r 
        document.getElementById("flag-button").style.backgroundColor = "darkgray";//bayrak butonunun arka plan rengini "darkgray" olarak deÄŸiÅŸtirir.
    }
}

function clickTile()//tÄ±klanan hÃ¼creyi kontrol eden fonksiyon
{
    if (gameOver || this.classList.contains("tile-clicked")) //gameOver durumu veya tÄ±klanan hÃ¼crenin zaten tÄ±klanmÄ±ÅŸ olduÄŸu durumlarÄ±nda Ã§alÄ±ÅŸmayÄ± durdurur ve iÅŸlemleri geÃ§ersiz kÄ±lar.
    {
        return;
    }

    let tile = this;//TÄ±klanan hÃ¼cre bir tile deÄŸiÅŸkenine atanÄ±r. 
    if (flagEnabled) //eÄŸer bayrak modu aÃ§Ä±ksa
    {
        if (tile.innerText == "") //eÄŸer hÃ¼crenin iÃ§eriÄŸi boÅŸsa
        {
            tile.innerText = "ğŸš©";//hÃ¼creye bayrak eklenir
        }
        else if (tile.innerText == "ğŸš©") //eÄŸer hÃ¼crede bayrak varsa
        {
            tile.innerText = "";//bu bayrak kaldÄ±rÄ±lÄ±r
        }
        return;//Bu iÅŸlemlerden sonra fonksiyon Ã§alÄ±ÅŸmayÄ± sonlandÄ±rÄ±r
    }

    if (minesLocation.includes(tile.id)) //EÄŸer bayrak modu kapalÄ±ysa ve tÄ±klanan hÃ¼cre mayÄ±nlarÄ±n yer aldÄ±ÄŸÄ± konumlar listesinde bulunmuyorsa, mayÄ±nlarÄ± kontrol etmek iÃ§in checkMine fonksiyonu Ã§aÄŸrÄ±lÄ±r. 
    {
        // alert("GAME OVER");
        gameOver = true;//eÄŸer tÄ±klanan hÃ¼crede mayÄ±n varsa oyunu kaybeder 
        revealMines();// revealMines fonksiyonu Ã§aÄŸrÄ±larak tÃ¼m madenlerin gÃ¶sterilmesi saÄŸlanÄ±r. 
        return;//Bu iÅŸlemlerden sonra fonksiyon Ã§alÄ±ÅŸmayÄ± sonlandÄ±rÄ±r
    }


    let coords = tile.id.split("-"); //TÄ±klanan hÃ¼crenin id Ã¶zelliÄŸini alÄ±r ve bu iÅŸlem sonucunda "0-0" gibi bir id ise ["0", "0"] ÅŸeklinde bir dizi elde edilir. Bu dizi, satÄ±r ve sÃ¼tun koordinatlarÄ±nÄ± iÃ§erir.
    let r = parseInt(coords[0]);//coords dizisinin ilk elemanÄ±, hÃ¼crenin satÄ±rÄ±nÄ± temsil eder. Bu deÄŸer bir metin olarak alÄ±ndÄ±ÄŸÄ±ndan parseInt fonksiyonu kullanÄ±larak tam sayÄ±ya dÃ¶nÃ¼ÅŸtÃ¼rÃ¼lÃ¼r ve r deÄŸiÅŸkenine atanÄ±r.
    let c = parseInt(coords[1]);//coords dizisinin ikinci elemanÄ±, hÃ¼crenin sÃ¼tununu temsil eder. Bu deÄŸer de bir metin olarak alÄ±ndÄ±ÄŸÄ±ndan parseInt fonksiyonu kullanÄ±larak tam sayÄ±ya dÃ¶nÃ¼ÅŸtÃ¼rÃ¼lÃ¼r ve c deÄŸiÅŸkenine atanÄ±r.
    checkMine(r, c);//checkMine fonksiyonunu Ã§aÄŸÄ±rarak tÄ±klanan hÃ¼crenin mayÄ±n iÃ§erip iÃ§ermediÄŸini kontrol eder.

}

function revealMines() //oyun bittiÄŸinde tÃ¼m mayÄ±nlarÄ±n gÃ¶sterilmesi iÃ§in kullanÄ±lan fonksiyon
{
    for (let r= 0; r < rows; r++) //satÄ±rdaki hÃ¼creleri tarar
    {
        for (let c = 0; c < columns; c++) //sÃ¼tundaki hÃ¼creleri tarar
        {
            let tile = board[r][c];//Her dÃ¶ngÃ¼ adÄ±mÄ±nda, o anki satÄ±r ve sÃ¼tundaki hÃ¼creyi tile deÄŸiÅŸkenine atar.
            if (minesLocation.includes(tile.id)) //EÄŸer minesLocation dizisi iÃ§indeki mayÄ±n konumlarÄ±ndan biri, taranan hÃ¼crenin id Ã¶zelliÄŸiyle eÅŸleÅŸiyorsa
            {
                tile.innerText = "ğŸ’£";//mayÄ±n iÃ§eren hÃ¼creye, kullanÄ±cÄ±ya gÃ¶stermek iÃ§in bir bomba ikonu eklenir.
                tile.style.backgroundColor = "red";//mayÄ±n iÃ§eren hÃ¼crenin arka plan rengi kÄ±rmÄ±zÄ± olarak deÄŸiÅŸtirilir             
            }
        }
    }
}

function checkMine(r, c) //mayÄ±nlarÄ± kontrol eden fonksiyon
{
    if (r < 0 || r >= rows || c < 0 || c >= columns) //tÄ±klanan hÃ¼crenin oyun tahtasÄ±nÄ±n dÄ±ÅŸÄ±na Ã§Ä±kÄ±p Ã§Ä±kmadÄ±ÄŸÄ±nÄ± kontrol eder. EÄŸer Ã§Ä±kÄ±yorsa, fonksiyonu sonlandÄ±rÄ±r ve iÅŸlem yapmaz. Bu Ã¶nlem, olasÄ± hata durumlarÄ±nÄ± Ã¶nlemek iÃ§in eklenmiÅŸ bir gÃ¼venlik Ã¶nlemidir.
    {
        return;
    }
    if (board[r][c].classList.contains("tile-clicked")) //tÄ±klanan hÃ¼crenin daha Ã¶nce tÄ±klanÄ±p tÄ±klanmadÄ±ÄŸÄ±nÄ± kontrol eder. eÄŸer daha Ã¶nce tÄ±klanmÄ±ÅŸsa iÅŸlemi sonladÄ±rÄ±r/aynÄ± hÃ¼crenin tekrar tekrar tÄ±klanmasÄ±nÄ± engeller
    {
        return;
    }

    board[r][c].classList.add("tile-clicked");//EÄŸer yukarÄ±daki koÅŸullar saÄŸlanmÄ±ÅŸsa ve hÃ¼cre geÃ§erliyse, hÃ¼creye "tile-clicked" sÄ±nÄ±fÄ±nÄ± ekler. kullanÄ±cÄ± tarafÄ±ndan tÄ±klanan hÃ¼creleri iÅŸaretlemek iÃ§in kullanÄ±lÄ±r.
    tilesClicked += 1;//AyrÄ±ca tilesClicked deÄŸiÅŸkeni de bir artÄ±rÄ±lÄ±r, bu da kullanÄ±cÄ± tarafÄ±ndan tÄ±klanan hÃ¼cre sayÄ±sÄ±nÄ± tutar.

    let minesFound = 0;//hÃ¼crenin etrafÄ±ndaki mayÄ±n sayÄ±sÄ±nÄ± tutar.

    //tÄ±klanan hÃ¼crenin etrafÄ±nda mayÄ±n olup olmadÄ±ÄŸÄ±nÄ± kontrol ediyor
    minesFound += checkTile(r-1, c-1);      //tÄ±klanan hÃ¼crenin sol Ã¼st  kÃ¶ÅŸesindeki hÃ¼creyi kontrol eder.EÄŸer bu komÅŸu hÃ¼crede maden varsa, minesFound deÄŸiÅŸkeni artÄ±rÄ±lÄ±r.
    minesFound += checkTile(r-1, c);        //tÄ±klanan hÃ¼crenin Ã¼stÃ¼ndeki hÃ¼creyi kontrol eder. EÄŸer bu komÅŸu hÃ¼crede maden varsa, minesFound deÄŸiÅŸkeni artÄ±rÄ±lÄ±r.
    minesFound += checkTile(r-1, c+1);      //tÄ±klanan hÃ¼crenin saÄŸ Ã¼st  kÃ¶ÅŸesindeki hÃ¼creyi kontrol eder.EÄŸer bu komÅŸu hÃ¼crede maden varsa, minesFound deÄŸiÅŸkeni artÄ±rÄ±lÄ±r.

    minesFound += checkTile(r, c-1);        //tÄ±klanan hÃ¼crenin solundaki hÃ¼creyi kontrol eder.EÄŸer bu komÅŸu hÃ¼crede maden varsa, minesFound deÄŸiÅŸkeni artÄ±rÄ±lÄ±r.
    minesFound += checkTile(r, c+1);        //tÄ±klanan hÃ¼crenin saÄŸÄ±ndaki hÃ¼creyi kontrol eder.EÄŸer bu komÅŸu hÃ¼crede maden varsa, minesFound deÄŸiÅŸkeni artÄ±rÄ±lÄ±r.

    minesFound += checkTile(r+1, c-1);      //tÄ±klanan hÃ¼crenin sol alt  kÃ¶ÅŸesindeki hÃ¼creyi kontrol eder.EÄŸer bu komÅŸu hÃ¼crede maden varsa, minesFound deÄŸiÅŸkeni artÄ±rÄ±lÄ±r.
    minesFound += checkTile(r+1, c);        //tÄ±klanan hÃ¼crenin altÄ±ndaki hÃ¼creyi kontrol eder.EÄŸer bu komÅŸu hÃ¼crede maden varsa, minesFound deÄŸiÅŸkeni artÄ±rÄ±lÄ±r.
    minesFound += checkTile(r+1, c+1);      //tÄ±klanan hÃ¼crenin saÄŸ alt  kÃ¶ÅŸesindeki hÃ¼creyi kontrol eder. EÄŸer bu komÅŸu hÃ¼crede maden varsa, minesFound deÄŸiÅŸkeni artÄ±rÄ±lÄ±r.

    if (minesFound > 0) // EÄŸer tÄ±klanan hÃ¼crenin etrafÄ±nda mayÄ±n varsa 
    {
        board[r][c].innerText = minesFound;
        board[r][c].classList.add("x" + minesFound.toString());// o hÃ¼creye mayÄ±n sayÄ±sÄ±nÄ± yazÄ±p stil ekler.Ã–rneÄŸin, x3 sÄ±nÄ±fÄ±nÄ± ekleyerek Ã¼Ã§ mayÄ±n olduÄŸunu gÃ¶sterebilir.
    }
    else // EÄŸer tÄ±klanan hÃ¼crenin etrafÄ±nda mayÄ±n yoksa   
    {
        board[r][c].innerText = ""; //o hÃ¼creyi boÅŸ bÄ±rakÄ±r
        
        //ve etrafÄ±ndaki hÃ¼creleri kontrol etmek iÃ§in checkMine fonksiyonunu Ã§aÄŸÄ±rÄ±r. Bu, tÄ±klanan hÃ¼crenin etrafÄ±ndaki tÃ¼m boÅŸ hÃ¼creleri aÃ§Ä±ÄŸa Ã§Ä±karÄ±r ve oyun alanÄ±nÄ± geniÅŸletir. 
        checkMine(r-1, c-1);    //top left
        checkMine(r-1, c);      //top
        checkMine(r-1, c+1);    //top right

        checkMine(r, c-1);      //left
        checkMine(r, c+1);      //right

        checkMine(r+1, c-1);    //bottom left
        checkMine(r+1, c);      //bottom
        checkMine(r+1, c+1);    //bottom right
    }

    if (tilesClicked == rows * columns - minesCount) //eÄŸer kullanÄ±cÄ± tÃ¼m mayÄ±n olmayan hÃ¼creleri bulduysa oyunu kazanmÄ±ÅŸ demektir
    {
        document.getElementById("mines-count").innerText = "Cleared";//Cleared mesajÄ± gÃ¶rÃ¼ntÃ¼lenir ve
        gameOver = true;//oyun sona erer
    }
}

function checkTile(r, c) //hÃ¼crede maden olup olmadÄ±ÄŸÄ±nÄ± kontrol eden fonksiyon
{
    if (r < 0 || r >= rows || c < 0 || c >= columns) //eÄŸer verilen koordinatlar (r, c) oyun tahtasÄ±nÄ±n dÄ±ÅŸÄ±ndaysa, fonksiyon 0 deÄŸeriyle Ã§Ä±kar. Bu durumda, bu hÃ¼cre mayÄ±n deÄŸil ve oyun tahtasÄ±nÄ±n dÄ±ÅŸÄ±nda olduÄŸu iÃ§in mayÄ±n bulunamaz.
    {
        return 0;
    }
    if (minesLocation.includes(r.toString() + "-" + c.toString())) //eÄŸer verilen koordinatlardaki hÃ¼cre mayÄ±n konumlarÄ± listesinde varsa, yani bu hÃ¼cre mayÄ±n iÃ§eriyorsa, fonksiyon 1 deÄŸeriyle Ã§Ä±kar. Bu durumda, bu hÃ¼cre mayÄ±n iÃ§erir ve mayÄ±n bulunmuÅŸ olur.
    {
        return 1;
    }
    return 0;//eÄŸer hÃ¼cre oyun tahtasÄ±nÄ±n sÄ±nÄ±rlarÄ± iÃ§indeyse ve mayÄ±n konumlarÄ± listesinde de deÄŸilse, fonksiyon 0 deÄŸeriyle Ã§Ä±kar. Bu durumda, bu hÃ¼cre mayÄ±n iÃ§ermez ve mayÄ±n bulunamaz.
}